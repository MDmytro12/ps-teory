---------------------- 0) Вступ ----------------------------------

get-command

------------------------- 1) Змінні ---------------------------------
 
$variable = "Value" - оголошення та ініціалізація змінної

Set-Variable -Name color -Value blue - встановлення нового значення

Get-Variable -Name color - отримання значення

Name 	Value
---- 	-----
$ 	Get-PSDrive
? 	True
^	 Get-PSDrive
args 	{}
color 	blue
--пропуск--

Встроєні змінні : (деякі з них можна змінювати , але вони є встроєними в оболонку і їх бажано використовувати лише в режимі читання щоб не спортити конфігурацію операційної системи)

$null - вона нічого н7е представляє , являє соббою відсутність значення.Оболонка буде знати про наявність такої змінної , але вона буде пустою і помилки в консолі не з'явиться,
.

$LASTEXITCODE - вихідний код останньоьго процесу ( 1 - не успішне завершення , 0 - успішне завершення процесу )

В ПШ в загальному є три типи даних :

-логічне
-цифрове ( цілі числа та з плаваючою комою ) $num = 0 $num = 0.1234567910
-текстові дані $color = "blue"

Змінні можна встроювати в текст. PS> $sentence = "Today, you learned that $language loves the color $color" ( Обов'язково в подвійних кавичках , не одинарних. )


В ПШ все являється об'єктом.З технічної точки зору об'єкт - це екземпляр певного шаблону , який називається класом.

PS> Select-Object -InputObject $color -Property * - перевірка наяявності атрибутів.

PS> Get-Member -InputObject $color - огляд методів та атрибутів.

-------------------- 2) Структура даних ---------------------------

Структура даних - спосіб організувати декілька елементів даних.Вони бувають трьох типів у ПШ : об'єкти , масиви , списки , хеш-таблиці.

Оголошення масиву : PS> $colorPicker = @('blue','white','yellow','black')
Доступ до елементу масиву : PS> $colorPicker[0]

PS> $colorPicker[1..3]

white
yellow
black

Зміна значення елементу масиву :

PS> $colorPicker[3] = 'white'

Добавлення елементу в масив :

PS> $colorPicker = $colorPicker + 'orange'
Масив зазвичай мають фіксовану довжину і тому при створенні новго масиву кожного разу прийдется створювати новий масив з новим елементом , для того щоб невідбувалося
скачків у памяті коли оперуються великі об'єми даних було створено ще одну структуру ArrayList.

ArrayList не мають фіксованого розміру і змінюються динамічно , але їхня поведінка ідентична масиву.Їх краще використовувати , коли постійно відбувається добавлення або 
видалення елементів зі списку.

Оголошення та ініціалізація списку :

PS> $colorPicker = [System.Collections.ArrayList]@('blue','white','yellow', 'black')

Добавлення елементу : PS> $colorPicker.Add('gray')

Видалення елементу зі списку : PS> $colorPicker.Remove('gray') (необовязково вказувати індекс)

Списки дозволяють уникнути великих скачків у пам'яті ( одначенсе вивільнення та заповнення великих об'ємів ).

Хеш-таблиця - це один з способів співставити дані типу "ключ" - "значення".
Оголошення хеш-таблиці : 

PS> $users = @{
abertram = 'Adam Bertram'
raquelcer = 'Raquel Cerillo'
zheng21 = 'Justin Zheng'
}

Звернення  до елементу :

PS> $users['abertram']
PS> $users.abertram

Добавлення та зміна елементів хеш-таблиці 

PS> $users.Add('natice', 'Natalie Ice')
PS> $users['phrigo'] = 'Phil Rigo'

Перевірка на наявність елементу в хеш-таблиці 

PS> $users.ContainsKey('johnnyq')

Видалення елементу з хеш-таблиці :

PS> $users.Remove('natice')

До цих пір ми створювали та використовували типи об'єктів , встроєні в ПШ.Але в ПШ можна створювати об'єкти та наділяти їх власними властивостямита методами.
Тип який представляє користувацькі об'єкти : PSCustomObject.
Оголошення та ініціалізація кастомногго об'єкту :
PS> $myFirstCustomObject = New-Object -TypeName PSCustomObject
PS> $myFirstCustomObject = [PSCustomObject]@{OSBuild = 'x'; OSVersion = 'y'}

---------------------- 4) Конвеєр команд ----------------------------

Конвеєр команд - це ланцюг команд ПШ , який дозволяє передавати вихідні дані однієї команди на вхідні дані іншої команди.

PS> command_1 | command_2

В цьому конвеєрі команд дані від команди 1 передаються на вхід команді 2.Між командами в конвеєрі передаються об'єкти.

PS> Get-Service -Name 'wuauserv' | Start-Service













































